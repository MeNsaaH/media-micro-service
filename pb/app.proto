syntax = "proto3";

package media;

// -----------------Song service-----------------

service SongService {
  rpc AddArtist(AddArtistRequest) returns (AddArtistResponse) {}
  rpc AddAlbum(AddAlbumRequest) returns (AddAlbumResponse) {}
  rpc AddSong(AddSongRequest) returns (AddSongResponse) {}
  rpc GetSong(GetSongRequest) returns (Song) {}
  rpc GetSongs(Empty) returns (stream Song) {}
  rpc GetAlbums(Empty) returns (stream Album) {}
  rpc GetArtists(Empty) returns (stream Artist) {}
  rpc RemoveSong(RemoveSongRequest) returns (Empty) {}
}

message Artist {
  string id = 1;
  string name = 2;
  string stage_name = 3;
  int32 age = 4;
}

message AddArtistRequest {
  string name = 1;
  string stage_name = 2;
  int32 age = 3;
}

message AddArtistResponse {
  string artist_id = 1;
}

message Album {
  string id = 1;
  string title = 2;
  string date = 3;
  Artist artist = 4;
}

message AddAlbumRequest {
  string artist_id = 1;
  Album album = 2;
}

message AddAlbumResponse{
  string album_id = 1;
}

message Song {
  string id = 1;
  string title = 2;
  int32  track_number = 3;
  repeated Artist featured_artists = 4;
  Album album = 5;
  Artist artist = 6;
}

message AddSongRequest {
  string album_id = 1;
  string artist_id = 2;
  Song song = 3;
}

message AddSongResponse {
  string song_id = 1;
}

message RemoveSongRequest {
  string song_id = 1;
}

message GetSongRequest {
  string song_id = 1;
}

message Empty {}

// ---------------Video service----------

service VideoService {
  rpc ListVideos(Empty) returns (ListVideosResponse){}
  rpc GetVideo(GetVideoRequest) returns (Video){}
  rpc AddVideo(AddVideoRequest) returns (AddVideoResponse){}
  rpc SearchVideos(SearchVideosRequest) returns (SearchVideosResponse){}
}

message Person {
  string name = 1;
}

message Video {
  string id = 1;
  string title = 2;
  Artist artist = 3;
  repeated Person directors = 4;
  string date = 5;
}

message GetVideoRequest {
  string video_id = 1;
}

message AddVideoRequest {
  string artist_id = 1;
  Video video = 2;
}

message ListVideosResponse {
  repeated Video video = 1;
}

message AddVideoResponse {
  string video_id = 1;
}

message SearchVideosRequest {
  string query = 1;
}

message SearchVideosResponse {
  repeated Video results = 1;
}


// -------------Email service-----------------

service EmailService {
  rpc SendConfirmation(SendConfirmationRequest) returns (Empty) {}
}

message SendConfirmationRequest {
  string email = 1;
  string message = 2;
}
