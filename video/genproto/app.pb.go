// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app.proto

package media

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Artist struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StageName            string   `protobuf:"bytes,3,opt,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`
	Age                  int32    `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artist) Reset()         { *m = Artist{} }
func (m *Artist) String() string { return proto.CompactTextString(m) }
func (*Artist) ProtoMessage()    {}
func (*Artist) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{0}
}

func (m *Artist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artist.Unmarshal(m, b)
}
func (m *Artist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artist.Marshal(b, m, deterministic)
}
func (m *Artist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artist.Merge(m, src)
}
func (m *Artist) XXX_Size() int {
	return xxx_messageInfo_Artist.Size(m)
}
func (m *Artist) XXX_DiscardUnknown() {
	xxx_messageInfo_Artist.DiscardUnknown(m)
}

var xxx_messageInfo_Artist proto.InternalMessageInfo

func (m *Artist) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Artist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Artist) GetStageName() string {
	if m != nil {
		return m.StageName
	}
	return ""
}

func (m *Artist) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type AddArtistRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StageName            string   `protobuf:"bytes,2,opt,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`
	Age                  int32    `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddArtistRequest) Reset()         { *m = AddArtistRequest{} }
func (m *AddArtistRequest) String() string { return proto.CompactTextString(m) }
func (*AddArtistRequest) ProtoMessage()    {}
func (*AddArtistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{1}
}

func (m *AddArtistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddArtistRequest.Unmarshal(m, b)
}
func (m *AddArtistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddArtistRequest.Marshal(b, m, deterministic)
}
func (m *AddArtistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddArtistRequest.Merge(m, src)
}
func (m *AddArtistRequest) XXX_Size() int {
	return xxx_messageInfo_AddArtistRequest.Size(m)
}
func (m *AddArtistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddArtistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddArtistRequest proto.InternalMessageInfo

func (m *AddArtistRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddArtistRequest) GetStageName() string {
	if m != nil {
		return m.StageName
	}
	return ""
}

func (m *AddArtistRequest) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type AddArtistResponse struct {
	ArtistId             string   `protobuf:"bytes,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddArtistResponse) Reset()         { *m = AddArtistResponse{} }
func (m *AddArtistResponse) String() string { return proto.CompactTextString(m) }
func (*AddArtistResponse) ProtoMessage()    {}
func (*AddArtistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{2}
}

func (m *AddArtistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddArtistResponse.Unmarshal(m, b)
}
func (m *AddArtistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddArtistResponse.Marshal(b, m, deterministic)
}
func (m *AddArtistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddArtistResponse.Merge(m, src)
}
func (m *AddArtistResponse) XXX_Size() int {
	return xxx_messageInfo_AddArtistResponse.Size(m)
}
func (m *AddArtistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddArtistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddArtistResponse proto.InternalMessageInfo

func (m *AddArtistResponse) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

type Album struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Date                 string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Artist               *Artist  `protobuf:"bytes,4,opt,name=artist,proto3" json:"artist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Album) Reset()         { *m = Album{} }
func (m *Album) String() string { return proto.CompactTextString(m) }
func (*Album) ProtoMessage()    {}
func (*Album) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{3}
}

func (m *Album) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Album.Unmarshal(m, b)
}
func (m *Album) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Album.Marshal(b, m, deterministic)
}
func (m *Album) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Album.Merge(m, src)
}
func (m *Album) XXX_Size() int {
	return xxx_messageInfo_Album.Size(m)
}
func (m *Album) XXX_DiscardUnknown() {
	xxx_messageInfo_Album.DiscardUnknown(m)
}

var xxx_messageInfo_Album proto.InternalMessageInfo

func (m *Album) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Album) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Album) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Album) GetArtist() *Artist {
	if m != nil {
		return m.Artist
	}
	return nil
}

type AddAlbumRequest struct {
	ArtistId             string   `protobuf:"bytes,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	Album                *Album   `protobuf:"bytes,2,opt,name=album,proto3" json:"album,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAlbumRequest) Reset()         { *m = AddAlbumRequest{} }
func (m *AddAlbumRequest) String() string { return proto.CompactTextString(m) }
func (*AddAlbumRequest) ProtoMessage()    {}
func (*AddAlbumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{4}
}

func (m *AddAlbumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAlbumRequest.Unmarshal(m, b)
}
func (m *AddAlbumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAlbumRequest.Marshal(b, m, deterministic)
}
func (m *AddAlbumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAlbumRequest.Merge(m, src)
}
func (m *AddAlbumRequest) XXX_Size() int {
	return xxx_messageInfo_AddAlbumRequest.Size(m)
}
func (m *AddAlbumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAlbumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAlbumRequest proto.InternalMessageInfo

func (m *AddAlbumRequest) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

func (m *AddAlbumRequest) GetAlbum() *Album {
	if m != nil {
		return m.Album
	}
	return nil
}

type AddAlbumResponse struct {
	AlbumId              string   `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAlbumResponse) Reset()         { *m = AddAlbumResponse{} }
func (m *AddAlbumResponse) String() string { return proto.CompactTextString(m) }
func (*AddAlbumResponse) ProtoMessage()    {}
func (*AddAlbumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{5}
}

func (m *AddAlbumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAlbumResponse.Unmarshal(m, b)
}
func (m *AddAlbumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAlbumResponse.Marshal(b, m, deterministic)
}
func (m *AddAlbumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAlbumResponse.Merge(m, src)
}
func (m *AddAlbumResponse) XXX_Size() int {
	return xxx_messageInfo_AddAlbumResponse.Size(m)
}
func (m *AddAlbumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAlbumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddAlbumResponse proto.InternalMessageInfo

func (m *AddAlbumResponse) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

type Song struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	TrackNumber          int32     `protobuf:"varint,3,opt,name=track_number,json=trackNumber,proto3" json:"track_number,omitempty"`
	FeaturedArtists      []*Artist `protobuf:"bytes,4,rep,name=featured_artists,json=featuredArtists,proto3" json:"featured_artists,omitempty"`
	Album                *Album    `protobuf:"bytes,5,opt,name=album,proto3" json:"album,omitempty"`
	Artist               *Artist   `protobuf:"bytes,6,opt,name=artist,proto3" json:"artist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Song) Reset()         { *m = Song{} }
func (m *Song) String() string { return proto.CompactTextString(m) }
func (*Song) ProtoMessage()    {}
func (*Song) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{6}
}

func (m *Song) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Song.Unmarshal(m, b)
}
func (m *Song) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Song.Marshal(b, m, deterministic)
}
func (m *Song) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Song.Merge(m, src)
}
func (m *Song) XXX_Size() int {
	return xxx_messageInfo_Song.Size(m)
}
func (m *Song) XXX_DiscardUnknown() {
	xxx_messageInfo_Song.DiscardUnknown(m)
}

var xxx_messageInfo_Song proto.InternalMessageInfo

func (m *Song) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Song) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Song) GetTrackNumber() int32 {
	if m != nil {
		return m.TrackNumber
	}
	return 0
}

func (m *Song) GetFeaturedArtists() []*Artist {
	if m != nil {
		return m.FeaturedArtists
	}
	return nil
}

func (m *Song) GetAlbum() *Album {
	if m != nil {
		return m.Album
	}
	return nil
}

func (m *Song) GetArtist() *Artist {
	if m != nil {
		return m.Artist
	}
	return nil
}

type AddSongRequest struct {
	AlbumId              string   `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	ArtistId             string   `protobuf:"bytes,2,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	Song                 *Song    `protobuf:"bytes,3,opt,name=song,proto3" json:"song,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSongRequest) Reset()         { *m = AddSongRequest{} }
func (m *AddSongRequest) String() string { return proto.CompactTextString(m) }
func (*AddSongRequest) ProtoMessage()    {}
func (*AddSongRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{7}
}

func (m *AddSongRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSongRequest.Unmarshal(m, b)
}
func (m *AddSongRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSongRequest.Marshal(b, m, deterministic)
}
func (m *AddSongRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSongRequest.Merge(m, src)
}
func (m *AddSongRequest) XXX_Size() int {
	return xxx_messageInfo_AddSongRequest.Size(m)
}
func (m *AddSongRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSongRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddSongRequest proto.InternalMessageInfo

func (m *AddSongRequest) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *AddSongRequest) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

func (m *AddSongRequest) GetSong() *Song {
	if m != nil {
		return m.Song
	}
	return nil
}

type AddSongResponse struct {
	SongId               string   `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSongResponse) Reset()         { *m = AddSongResponse{} }
func (m *AddSongResponse) String() string { return proto.CompactTextString(m) }
func (*AddSongResponse) ProtoMessage()    {}
func (*AddSongResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{8}
}

func (m *AddSongResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSongResponse.Unmarshal(m, b)
}
func (m *AddSongResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSongResponse.Marshal(b, m, deterministic)
}
func (m *AddSongResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSongResponse.Merge(m, src)
}
func (m *AddSongResponse) XXX_Size() int {
	return xxx_messageInfo_AddSongResponse.Size(m)
}
func (m *AddSongResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSongResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddSongResponse proto.InternalMessageInfo

func (m *AddSongResponse) GetSongId() string {
	if m != nil {
		return m.SongId
	}
	return ""
}

type RemoveSongRequest struct {
	SongId               string   `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveSongRequest) Reset()         { *m = RemoveSongRequest{} }
func (m *RemoveSongRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveSongRequest) ProtoMessage()    {}
func (*RemoveSongRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{9}
}

func (m *RemoveSongRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveSongRequest.Unmarshal(m, b)
}
func (m *RemoveSongRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveSongRequest.Marshal(b, m, deterministic)
}
func (m *RemoveSongRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveSongRequest.Merge(m, src)
}
func (m *RemoveSongRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveSongRequest.Size(m)
}
func (m *RemoveSongRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveSongRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveSongRequest proto.InternalMessageInfo

func (m *RemoveSongRequest) GetSongId() string {
	if m != nil {
		return m.SongId
	}
	return ""
}

type GetSongRequest struct {
	SongId               string   `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSongRequest) Reset()         { *m = GetSongRequest{} }
func (m *GetSongRequest) String() string { return proto.CompactTextString(m) }
func (*GetSongRequest) ProtoMessage()    {}
func (*GetSongRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{10}
}

func (m *GetSongRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSongRequest.Unmarshal(m, b)
}
func (m *GetSongRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSongRequest.Marshal(b, m, deterministic)
}
func (m *GetSongRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSongRequest.Merge(m, src)
}
func (m *GetSongRequest) XXX_Size() int {
	return xxx_messageInfo_GetSongRequest.Size(m)
}
func (m *GetSongRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSongRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSongRequest proto.InternalMessageInfo

func (m *GetSongRequest) GetSongId() string {
	if m != nil {
		return m.SongId
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{11}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Person struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{12}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Video struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist               *Artist   `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Directors            []*Person `protobuf:"bytes,4,rep,name=directors,proto3" json:"directors,omitempty"`
	Date                 string    `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Video) Reset()         { *m = Video{} }
func (m *Video) String() string { return proto.CompactTextString(m) }
func (*Video) ProtoMessage()    {}
func (*Video) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{13}
}

func (m *Video) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Video.Unmarshal(m, b)
}
func (m *Video) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Video.Marshal(b, m, deterministic)
}
func (m *Video) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Video.Merge(m, src)
}
func (m *Video) XXX_Size() int {
	return xxx_messageInfo_Video.Size(m)
}
func (m *Video) XXX_DiscardUnknown() {
	xxx_messageInfo_Video.DiscardUnknown(m)
}

var xxx_messageInfo_Video proto.InternalMessageInfo

func (m *Video) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Video) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Video) GetArtist() *Artist {
	if m != nil {
		return m.Artist
	}
	return nil
}

func (m *Video) GetDirectors() []*Person {
	if m != nil {
		return m.Directors
	}
	return nil
}

func (m *Video) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

type GetVideoRequest struct {
	VideoId              string   `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVideoRequest) Reset()         { *m = GetVideoRequest{} }
func (m *GetVideoRequest) String() string { return proto.CompactTextString(m) }
func (*GetVideoRequest) ProtoMessage()    {}
func (*GetVideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{14}
}

func (m *GetVideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVideoRequest.Unmarshal(m, b)
}
func (m *GetVideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVideoRequest.Marshal(b, m, deterministic)
}
func (m *GetVideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVideoRequest.Merge(m, src)
}
func (m *GetVideoRequest) XXX_Size() int {
	return xxx_messageInfo_GetVideoRequest.Size(m)
}
func (m *GetVideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVideoRequest proto.InternalMessageInfo

func (m *GetVideoRequest) GetVideoId() string {
	if m != nil {
		return m.VideoId
	}
	return ""
}

type AddVideoRequest struct {
	ArtistId             string   `protobuf:"bytes,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	Video                *Video   `protobuf:"bytes,2,opt,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddVideoRequest) Reset()         { *m = AddVideoRequest{} }
func (m *AddVideoRequest) String() string { return proto.CompactTextString(m) }
func (*AddVideoRequest) ProtoMessage()    {}
func (*AddVideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{15}
}

func (m *AddVideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddVideoRequest.Unmarshal(m, b)
}
func (m *AddVideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddVideoRequest.Marshal(b, m, deterministic)
}
func (m *AddVideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddVideoRequest.Merge(m, src)
}
func (m *AddVideoRequest) XXX_Size() int {
	return xxx_messageInfo_AddVideoRequest.Size(m)
}
func (m *AddVideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddVideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddVideoRequest proto.InternalMessageInfo

func (m *AddVideoRequest) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

func (m *AddVideoRequest) GetVideo() *Video {
	if m != nil {
		return m.Video
	}
	return nil
}

type ListVideosResponse struct {
	Video                []*Video `protobuf:"bytes,1,rep,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVideosResponse) Reset()         { *m = ListVideosResponse{} }
func (m *ListVideosResponse) String() string { return proto.CompactTextString(m) }
func (*ListVideosResponse) ProtoMessage()    {}
func (*ListVideosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{16}
}

func (m *ListVideosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVideosResponse.Unmarshal(m, b)
}
func (m *ListVideosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVideosResponse.Marshal(b, m, deterministic)
}
func (m *ListVideosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVideosResponse.Merge(m, src)
}
func (m *ListVideosResponse) XXX_Size() int {
	return xxx_messageInfo_ListVideosResponse.Size(m)
}
func (m *ListVideosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVideosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVideosResponse proto.InternalMessageInfo

func (m *ListVideosResponse) GetVideo() []*Video {
	if m != nil {
		return m.Video
	}
	return nil
}

type AddVideoResponse struct {
	VideoId              string   `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddVideoResponse) Reset()         { *m = AddVideoResponse{} }
func (m *AddVideoResponse) String() string { return proto.CompactTextString(m) }
func (*AddVideoResponse) ProtoMessage()    {}
func (*AddVideoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{17}
}

func (m *AddVideoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddVideoResponse.Unmarshal(m, b)
}
func (m *AddVideoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddVideoResponse.Marshal(b, m, deterministic)
}
func (m *AddVideoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddVideoResponse.Merge(m, src)
}
func (m *AddVideoResponse) XXX_Size() int {
	return xxx_messageInfo_AddVideoResponse.Size(m)
}
func (m *AddVideoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddVideoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddVideoResponse proto.InternalMessageInfo

func (m *AddVideoResponse) GetVideoId() string {
	if m != nil {
		return m.VideoId
	}
	return ""
}

type SearchVideosRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchVideosRequest) Reset()         { *m = SearchVideosRequest{} }
func (m *SearchVideosRequest) String() string { return proto.CompactTextString(m) }
func (*SearchVideosRequest) ProtoMessage()    {}
func (*SearchVideosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{18}
}

func (m *SearchVideosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchVideosRequest.Unmarshal(m, b)
}
func (m *SearchVideosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchVideosRequest.Marshal(b, m, deterministic)
}
func (m *SearchVideosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVideosRequest.Merge(m, src)
}
func (m *SearchVideosRequest) XXX_Size() int {
	return xxx_messageInfo_SearchVideosRequest.Size(m)
}
func (m *SearchVideosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVideosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVideosRequest proto.InternalMessageInfo

func (m *SearchVideosRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type SearchVideosResponse struct {
	Results              []*Video `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchVideosResponse) Reset()         { *m = SearchVideosResponse{} }
func (m *SearchVideosResponse) String() string { return proto.CompactTextString(m) }
func (*SearchVideosResponse) ProtoMessage()    {}
func (*SearchVideosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{19}
}

func (m *SearchVideosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchVideosResponse.Unmarshal(m, b)
}
func (m *SearchVideosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchVideosResponse.Marshal(b, m, deterministic)
}
func (m *SearchVideosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVideosResponse.Merge(m, src)
}
func (m *SearchVideosResponse) XXX_Size() int {
	return xxx_messageInfo_SearchVideosResponse.Size(m)
}
func (m *SearchVideosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVideosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVideosResponse proto.InternalMessageInfo

func (m *SearchVideosResponse) GetResults() []*Video {
	if m != nil {
		return m.Results
	}
	return nil
}

type SendConfirmationRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendConfirmationRequest) Reset()         { *m = SendConfirmationRequest{} }
func (m *SendConfirmationRequest) String() string { return proto.CompactTextString(m) }
func (*SendConfirmationRequest) ProtoMessage()    {}
func (*SendConfirmationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{20}
}

func (m *SendConfirmationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendConfirmationRequest.Unmarshal(m, b)
}
func (m *SendConfirmationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendConfirmationRequest.Marshal(b, m, deterministic)
}
func (m *SendConfirmationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendConfirmationRequest.Merge(m, src)
}
func (m *SendConfirmationRequest) XXX_Size() int {
	return xxx_messageInfo_SendConfirmationRequest.Size(m)
}
func (m *SendConfirmationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendConfirmationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendConfirmationRequest proto.InternalMessageInfo

func (m *SendConfirmationRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SendConfirmationRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Artist)(nil), "media.Artist")
	proto.RegisterType((*AddArtistRequest)(nil), "media.AddArtistRequest")
	proto.RegisterType((*AddArtistResponse)(nil), "media.AddArtistResponse")
	proto.RegisterType((*Album)(nil), "media.Album")
	proto.RegisterType((*AddAlbumRequest)(nil), "media.AddAlbumRequest")
	proto.RegisterType((*AddAlbumResponse)(nil), "media.AddAlbumResponse")
	proto.RegisterType((*Song)(nil), "media.Song")
	proto.RegisterType((*AddSongRequest)(nil), "media.AddSongRequest")
	proto.RegisterType((*AddSongResponse)(nil), "media.AddSongResponse")
	proto.RegisterType((*RemoveSongRequest)(nil), "media.RemoveSongRequest")
	proto.RegisterType((*GetSongRequest)(nil), "media.GetSongRequest")
	proto.RegisterType((*Empty)(nil), "media.Empty")
	proto.RegisterType((*Person)(nil), "media.Person")
	proto.RegisterType((*Video)(nil), "media.Video")
	proto.RegisterType((*GetVideoRequest)(nil), "media.GetVideoRequest")
	proto.RegisterType((*AddVideoRequest)(nil), "media.AddVideoRequest")
	proto.RegisterType((*ListVideosResponse)(nil), "media.ListVideosResponse")
	proto.RegisterType((*AddVideoResponse)(nil), "media.AddVideoResponse")
	proto.RegisterType((*SearchVideosRequest)(nil), "media.SearchVideosRequest")
	proto.RegisterType((*SearchVideosResponse)(nil), "media.SearchVideosResponse")
	proto.RegisterType((*SendConfirmationRequest)(nil), "media.SendConfirmationRequest")
}

func init() { proto.RegisterFile("app.proto", fileDescriptor_e0f9056a14b86d47) }

var fileDescriptor_e0f9056a14b86d47 = []byte{
	// 829 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xeb, 0x6e, 0xd3, 0x4a,
	0x10, 0x8e, 0x93, 0x38, 0x97, 0x49, 0x4e, 0x9b, 0xee, 0xe9, 0x69, 0x52, 0xf7, 0x9c, 0x43, 0x59,
	0x09, 0xd4, 0xd2, 0x0b, 0x55, 0x90, 0xa0, 0x42, 0x02, 0x11, 0x50, 0x55, 0x45, 0x42, 0x15, 0x4a,
	0x24, 0xf8, 0x85, 0x22, 0x37, 0xbb, 0x4d, 0x2d, 0x62, 0x3b, 0xf5, 0x6e, 0x2a, 0xf5, 0x01, 0x78,
	0x04, 0x5e, 0x86, 0xe7, 0xe0, 0x81, 0x90, 0x67, 0xbd, 0xbe, 0x25, 0x29, 0xfd, 0xe7, 0xd9, 0x99,
	0xfd, 0x66, 0xe6, 0x9b, 0xfd, 0x46, 0x86, 0xba, 0x3d, 0x9b, 0x1d, 0xcf, 0x02, 0x5f, 0xfa, 0xc4,
	0x74, 0x39, 0x73, 0x6c, 0xfa, 0x15, 0x2a, 0xbd, 0x40, 0x3a, 0x42, 0x92, 0x35, 0x28, 0x3a, 0xac,
	0x63, 0xec, 0x1a, 0x7b, 0xf5, 0x41, 0xd1, 0x61, 0x84, 0x40, 0xd9, 0xb3, 0x5d, 0xde, 0x29, 0xe2,
	0x09, 0x7e, 0x93, 0xff, 0x00, 0x84, 0xb4, 0x27, 0x7c, 0x84, 0x9e, 0x12, 0x7a, 0xea, 0x78, 0x72,
	0x11, 0xba, 0x5b, 0x50, 0xb2, 0x27, 0xbc, 0x53, 0xde, 0x35, 0xf6, 0xcc, 0x41, 0xf8, 0x49, 0xbf,
	0x40, 0xab, 0xc7, 0x98, 0xca, 0x30, 0xe0, 0x37, 0x73, 0x2e, 0x64, 0x0c, 0x6c, 0xac, 0x04, 0x2e,
	0xae, 0x00, 0x2e, 0x25, 0xc0, 0x27, 0xb0, 0x91, 0x02, 0x16, 0x33, 0xdf, 0x13, 0x9c, 0xec, 0x40,
	0xdd, 0xc6, 0x93, 0x51, 0xdc, 0x49, 0x4d, 0x1d, 0xf4, 0x19, 0xbd, 0x06, 0xb3, 0x37, 0xbd, 0x9c,
	0xbb, 0x0b, 0x8d, 0x6e, 0x82, 0x29, 0x1d, 0x39, 0xd5, 0x69, 0x95, 0x11, 0x56, 0xc9, 0x6c, 0xa9,
	0x9b, 0xc4, 0x6f, 0xf2, 0x04, 0x2a, 0x0a, 0x0e, 0x5b, 0x6c, 0x74, 0xff, 0x3a, 0x46, 0x12, 0x8f,
	0xa3, 0x32, 0x22, 0x27, 0x1d, 0xc0, 0x7a, 0x58, 0x5b, 0x98, 0x4c, 0xf7, 0x7c, 0x5f, 0x65, 0x84,
	0x82, 0x69, 0x87, 0xc1, 0x58, 0x40, 0xa3, 0xdb, 0xd4, 0xa8, 0x08, 0xa0, 0x5c, 0xf4, 0x48, 0x11,
	0xa9, 0x30, 0xa3, 0x76, 0xb7, 0xa1, 0x86, 0xce, 0x04, 0xb3, 0x8a, 0x76, 0x9f, 0xd1, 0x5f, 0x06,
	0x94, 0x87, 0xbe, 0x37, 0x79, 0x60, 0xb3, 0x8f, 0xa1, 0x29, 0x03, 0x7b, 0xfc, 0x6d, 0xe4, 0xcd,
	0xdd, 0x4b, 0x1e, 0x44, 0x44, 0x37, 0xf0, 0xec, 0x02, 0x8f, 0xc8, 0x29, 0xb4, 0xae, 0xb8, 0x2d,
	0xe7, 0x01, 0x67, 0x23, 0x55, 0xb9, 0xe8, 0x94, 0x77, 0x4b, 0x8b, 0x2c, 0xac, 0xeb, 0x30, 0x65,
	0x8b, 0xa4, 0x3d, 0x73, 0x65, 0x7b, 0x29, 0x66, 0x2b, 0xf7, 0x31, 0xeb, 0xc0, 0x5a, 0x8f, 0xb1,
	0xb0, 0x31, 0x4d, 0xec, 0x6a, 0x0e, 0xb2, 0x9c, 0x17, 0x73, 0x9c, 0x3f, 0x82, 0xb2, 0xf0, 0xbd,
	0x09, 0x76, 0xda, 0xe8, 0x36, 0xa2, 0x74, 0x88, 0x8c, 0x0e, 0xfa, 0x0c, 0x87, 0xa8, 0x52, 0x45,
	0x7c, 0xb7, 0xa1, 0x1a, 0xba, 0x92, 0x54, 0x95, 0xd0, 0xec, 0x33, 0x7a, 0x08, 0x1b, 0x03, 0xee,
	0xfa, 0xb7, 0x3c, 0x5d, 0xd9, 0xca, 0xe8, 0x7d, 0x58, 0x3b, 0xe7, 0xf2, 0x41, 0xa1, 0x55, 0x30,
	0xcf, 0xdc, 0x99, 0xbc, 0xa3, 0xff, 0x42, 0xe5, 0x13, 0x0f, 0x84, 0xef, 0x2d, 0x53, 0x0f, 0xfd,
	0x61, 0x80, 0xf9, 0xd9, 0x61, 0xdc, 0x7f, 0xe0, 0xb8, 0x13, 0xb6, 0x4b, 0xf7, 0xb0, 0x4d, 0x0e,
	0xa0, 0xce, 0x9c, 0x80, 0x8f, 0xa5, 0x1f, 0xe4, 0x67, 0xad, 0x8a, 0x19, 0x24, 0xfe, 0x58, 0x2f,
	0x66, 0xa2, 0x17, 0x7a, 0x08, 0xeb, 0xe7, 0x5c, 0x62, 0x65, 0xa9, 0x79, 0xdd, 0x86, 0x76, 0x6a,
	0x5e, 0x68, 0xf7, 0x59, 0x24, 0x9b, 0x4c, 0xf4, 0x9f, 0x64, 0x83, 0x57, 0x73, 0xb2, 0x51, 0x00,
	0xca, 0x45, 0x4f, 0x81, 0x7c, 0x74, 0x84, 0x2a, 0x41, 0xc4, 0x83, 0x8c, 0x6f, 0x1a, 0xd8, 0xd4,
	0xd2, 0x9b, 0x4a, 0x70, 0x51, 0x35, 0x89, 0xe0, 0x56, 0x15, 0x7f, 0x00, 0x7f, 0x0f, 0xb9, 0x1d,
	0x8c, 0xaf, 0x75, 0x2a, 0xd5, 0xc0, 0x26, 0x98, 0x37, 0x73, 0x1e, 0xdc, 0x45, 0xe1, 0xca, 0xa0,
	0x6f, 0x61, 0x33, 0x1b, 0x1c, 0xe1, 0x3f, 0x85, 0x6a, 0xc0, 0xc5, 0x7c, 0x2a, 0xc5, 0xd2, 0xca,
	0xb4, 0x93, 0xf6, 0xa1, 0x3d, 0xe4, 0x1e, 0xfb, 0xe0, 0x7b, 0x57, 0x4e, 0xe0, 0xda, 0xd2, 0xf1,
	0xbd, 0x54, 0x42, 0xee, 0xda, 0xce, 0x54, 0x27, 0x44, 0x83, 0x74, 0xa0, 0xea, 0x72, 0x21, 0xc2,
	0x1d, 0xaa, 0x1e, 0x82, 0x36, 0xbb, 0x3f, 0x4b, 0xd0, 0x08, 0x9f, 0xe2, 0x90, 0x07, 0xb7, 0xce,
	0x98, 0x93, 0x77, 0x50, 0x8f, 0xf7, 0x2a, 0x69, 0xeb, 0x77, 0x91, 0x5b, 0xe1, 0x56, 0x67, 0xd1,
	0xa1, 0x5a, 0xa0, 0x05, 0xf2, 0x06, 0x6a, 0x7a, 0x53, 0x91, 0xad, 0x54, 0x5c, 0x6a, 0x1d, 0x5a,
	0xed, 0x85, 0xf3, 0xf8, 0xfa, 0x6b, 0xa8, 0x46, 0xba, 0x23, 0xff, 0x24, 0x51, 0x29, 0xb5, 0x58,
	0x5b, 0xf9, 0xe3, 0xf8, 0xee, 0x73, 0xa8, 0x46, 0xca, 0x8a, 0xef, 0x66, 0x95, 0x66, 0xa5, 0x85,
	0x4e, 0x0b, 0x64, 0x1f, 0x6a, 0x51, 0x80, 0x20, 0x9a, 0x6b, 0x14, 0x5c, 0x2e, 0xf0, 0xc4, 0x08,
	0xc5, 0x70, 0xce, 0x25, 0x56, 0x9b, 0x8f, 0xcd, 0x6c, 0x34, 0x0c, 0x3e, 0x02, 0x08, 0x83, 0xa3,
	0x05, 0x98, 0x8d, 0xce, 0x8a, 0x0d, 0xc3, 0x5f, 0x02, 0x24, 0xfb, 0x83, 0x68, 0x72, 0x17, 0x56,
	0x8a, 0x95, 0x01, 0xa2, 0x85, 0xee, 0xf7, 0x22, 0x34, 0xf1, 0x69, 0xe8, 0xe9, 0xbd, 0x02, 0x48,
	0x9e, 0x7b, 0x2e, 0xef, 0x76, 0x64, 0x2d, 0xea, 0x81, 0x16, 0x48, 0x17, 0x89, 0x50, 0x3b, 0x64,
	0x2b, 0xa1, 0x2e, 0x2d, 0x46, 0x2b, 0xf3, 0x18, 0xe3, 0x41, 0x67, 0xef, 0xe4, 0x04, 0x9c, 0x1e,
	0x74, 0x46, 0x4a, 0xb4, 0x40, 0xfa, 0xd0, 0x4c, 0x8b, 0x80, 0x58, 0x9a, 0xf1, 0x45, 0x19, 0x59,
	0x3b, 0x4b, 0x7d, 0x1a, 0xaa, 0x3b, 0x80, 0xe6, 0x59, 0xf8, 0xce, 0x35, 0x0d, 0xef, 0xa1, 0x95,
	0xd7, 0x07, 0xf9, 0x3f, 0x86, 0x58, 0x2a, 0x9c, 0x3c, 0xb7, 0x97, 0x15, 0xfc, 0x4d, 0x7a, 0xf1,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0x31, 0x49, 0x4f, 0x77, 0x33, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SongServiceClient is the client API for SongService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SongServiceClient interface {
	AddArtist(ctx context.Context, in *AddArtistRequest, opts ...grpc.CallOption) (*AddArtistResponse, error)
	AddAlbum(ctx context.Context, in *AddAlbumRequest, opts ...grpc.CallOption) (*AddAlbumResponse, error)
	AddSong(ctx context.Context, in *AddSongRequest, opts ...grpc.CallOption) (*AddSongResponse, error)
	GetSong(ctx context.Context, in *GetSongRequest, opts ...grpc.CallOption) (*Song, error)
	GetSongs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (SongService_GetSongsClient, error)
	GetAlbums(ctx context.Context, in *Empty, opts ...grpc.CallOption) (SongService_GetAlbumsClient, error)
	GetArtists(ctx context.Context, in *Empty, opts ...grpc.CallOption) (SongService_GetArtistsClient, error)
	RemoveSong(ctx context.Context, in *RemoveSongRequest, opts ...grpc.CallOption) (*Empty, error)
}

type songServiceClient struct {
	cc *grpc.ClientConn
}

func NewSongServiceClient(cc *grpc.ClientConn) SongServiceClient {
	return &songServiceClient{cc}
}

func (c *songServiceClient) AddArtist(ctx context.Context, in *AddArtistRequest, opts ...grpc.CallOption) (*AddArtistResponse, error) {
	out := new(AddArtistResponse)
	err := c.cc.Invoke(ctx, "/media.SongService/AddArtist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songServiceClient) AddAlbum(ctx context.Context, in *AddAlbumRequest, opts ...grpc.CallOption) (*AddAlbumResponse, error) {
	out := new(AddAlbumResponse)
	err := c.cc.Invoke(ctx, "/media.SongService/AddAlbum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songServiceClient) AddSong(ctx context.Context, in *AddSongRequest, opts ...grpc.CallOption) (*AddSongResponse, error) {
	out := new(AddSongResponse)
	err := c.cc.Invoke(ctx, "/media.SongService/AddSong", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songServiceClient) GetSong(ctx context.Context, in *GetSongRequest, opts ...grpc.CallOption) (*Song, error) {
	out := new(Song)
	err := c.cc.Invoke(ctx, "/media.SongService/GetSong", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songServiceClient) GetSongs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (SongService_GetSongsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SongService_serviceDesc.Streams[0], "/media.SongService/GetSongs", opts...)
	if err != nil {
		return nil, err
	}
	x := &songServiceGetSongsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SongService_GetSongsClient interface {
	Recv() (*Song, error)
	grpc.ClientStream
}

type songServiceGetSongsClient struct {
	grpc.ClientStream
}

func (x *songServiceGetSongsClient) Recv() (*Song, error) {
	m := new(Song)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *songServiceClient) GetAlbums(ctx context.Context, in *Empty, opts ...grpc.CallOption) (SongService_GetAlbumsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SongService_serviceDesc.Streams[1], "/media.SongService/GetAlbums", opts...)
	if err != nil {
		return nil, err
	}
	x := &songServiceGetAlbumsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SongService_GetAlbumsClient interface {
	Recv() (*Album, error)
	grpc.ClientStream
}

type songServiceGetAlbumsClient struct {
	grpc.ClientStream
}

func (x *songServiceGetAlbumsClient) Recv() (*Album, error) {
	m := new(Album)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *songServiceClient) GetArtists(ctx context.Context, in *Empty, opts ...grpc.CallOption) (SongService_GetArtistsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SongService_serviceDesc.Streams[2], "/media.SongService/GetArtists", opts...)
	if err != nil {
		return nil, err
	}
	x := &songServiceGetArtistsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SongService_GetArtistsClient interface {
	Recv() (*Artist, error)
	grpc.ClientStream
}

type songServiceGetArtistsClient struct {
	grpc.ClientStream
}

func (x *songServiceGetArtistsClient) Recv() (*Artist, error) {
	m := new(Artist)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *songServiceClient) RemoveSong(ctx context.Context, in *RemoveSongRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/media.SongService/RemoveSong", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SongServiceServer is the server API for SongService service.
type SongServiceServer interface {
	AddArtist(context.Context, *AddArtistRequest) (*AddArtistResponse, error)
	AddAlbum(context.Context, *AddAlbumRequest) (*AddAlbumResponse, error)
	AddSong(context.Context, *AddSongRequest) (*AddSongResponse, error)
	GetSong(context.Context, *GetSongRequest) (*Song, error)
	GetSongs(*Empty, SongService_GetSongsServer) error
	GetAlbums(*Empty, SongService_GetAlbumsServer) error
	GetArtists(*Empty, SongService_GetArtistsServer) error
	RemoveSong(context.Context, *RemoveSongRequest) (*Empty, error)
}

// UnimplementedSongServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSongServiceServer struct {
}

func (*UnimplementedSongServiceServer) AddArtist(ctx context.Context, req *AddArtistRequest) (*AddArtistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddArtist not implemented")
}
func (*UnimplementedSongServiceServer) AddAlbum(ctx context.Context, req *AddAlbumRequest) (*AddAlbumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAlbum not implemented")
}
func (*UnimplementedSongServiceServer) AddSong(ctx context.Context, req *AddSongRequest) (*AddSongResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSong not implemented")
}
func (*UnimplementedSongServiceServer) GetSong(ctx context.Context, req *GetSongRequest) (*Song, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSong not implemented")
}
func (*UnimplementedSongServiceServer) GetSongs(req *Empty, srv SongService_GetSongsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetSongs not implemented")
}
func (*UnimplementedSongServiceServer) GetAlbums(req *Empty, srv SongService_GetAlbumsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAlbums not implemented")
}
func (*UnimplementedSongServiceServer) GetArtists(req *Empty, srv SongService_GetArtistsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetArtists not implemented")
}
func (*UnimplementedSongServiceServer) RemoveSong(ctx context.Context, req *RemoveSongRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSong not implemented")
}

func RegisterSongServiceServer(s *grpc.Server, srv SongServiceServer) {
	s.RegisterService(&_SongService_serviceDesc, srv)
}

func _SongService_AddArtist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddArtistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongServiceServer).AddArtist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.SongService/AddArtist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongServiceServer).AddArtist(ctx, req.(*AddArtistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongService_AddAlbum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAlbumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongServiceServer).AddAlbum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.SongService/AddAlbum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongServiceServer).AddAlbum(ctx, req.(*AddAlbumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongService_AddSong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSongRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongServiceServer).AddSong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.SongService/AddSong",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongServiceServer).AddSong(ctx, req.(*AddSongRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongService_GetSong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSongRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongServiceServer).GetSong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.SongService/GetSong",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongServiceServer).GetSong(ctx, req.(*GetSongRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongService_GetSongs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SongServiceServer).GetSongs(m, &songServiceGetSongsServer{stream})
}

type SongService_GetSongsServer interface {
	Send(*Song) error
	grpc.ServerStream
}

type songServiceGetSongsServer struct {
	grpc.ServerStream
}

func (x *songServiceGetSongsServer) Send(m *Song) error {
	return x.ServerStream.SendMsg(m)
}

func _SongService_GetAlbums_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SongServiceServer).GetAlbums(m, &songServiceGetAlbumsServer{stream})
}

type SongService_GetAlbumsServer interface {
	Send(*Album) error
	grpc.ServerStream
}

type songServiceGetAlbumsServer struct {
	grpc.ServerStream
}

func (x *songServiceGetAlbumsServer) Send(m *Album) error {
	return x.ServerStream.SendMsg(m)
}

func _SongService_GetArtists_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SongServiceServer).GetArtists(m, &songServiceGetArtistsServer{stream})
}

type SongService_GetArtistsServer interface {
	Send(*Artist) error
	grpc.ServerStream
}

type songServiceGetArtistsServer struct {
	grpc.ServerStream
}

func (x *songServiceGetArtistsServer) Send(m *Artist) error {
	return x.ServerStream.SendMsg(m)
}

func _SongService_RemoveSong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSongRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongServiceServer).RemoveSong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.SongService/RemoveSong",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongServiceServer).RemoveSong(ctx, req.(*RemoveSongRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SongService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "media.SongService",
	HandlerType: (*SongServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddArtist",
			Handler:    _SongService_AddArtist_Handler,
		},
		{
			MethodName: "AddAlbum",
			Handler:    _SongService_AddAlbum_Handler,
		},
		{
			MethodName: "AddSong",
			Handler:    _SongService_AddSong_Handler,
		},
		{
			MethodName: "GetSong",
			Handler:    _SongService_GetSong_Handler,
		},
		{
			MethodName: "RemoveSong",
			Handler:    _SongService_RemoveSong_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetSongs",
			Handler:       _SongService_GetSongs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetAlbums",
			Handler:       _SongService_GetAlbums_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetArtists",
			Handler:       _SongService_GetArtists_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "app.proto",
}

// VideoServiceClient is the client API for VideoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoServiceClient interface {
	ListVideos(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListVideosResponse, error)
	GetVideo(ctx context.Context, in *GetVideoRequest, opts ...grpc.CallOption) (*Video, error)
	AddVideo(ctx context.Context, in *AddVideoRequest, opts ...grpc.CallOption) (*AddVideoResponse, error)
	SearchVideos(ctx context.Context, in *SearchVideosRequest, opts ...grpc.CallOption) (*SearchVideosResponse, error)
}

type videoServiceClient struct {
	cc *grpc.ClientConn
}

func NewVideoServiceClient(cc *grpc.ClientConn) VideoServiceClient {
	return &videoServiceClient{cc}
}

func (c *videoServiceClient) ListVideos(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListVideosResponse, error) {
	out := new(ListVideosResponse)
	err := c.cc.Invoke(ctx, "/media.VideoService/ListVideos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) GetVideo(ctx context.Context, in *GetVideoRequest, opts ...grpc.CallOption) (*Video, error) {
	out := new(Video)
	err := c.cc.Invoke(ctx, "/media.VideoService/GetVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) AddVideo(ctx context.Context, in *AddVideoRequest, opts ...grpc.CallOption) (*AddVideoResponse, error) {
	out := new(AddVideoResponse)
	err := c.cc.Invoke(ctx, "/media.VideoService/AddVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) SearchVideos(ctx context.Context, in *SearchVideosRequest, opts ...grpc.CallOption) (*SearchVideosResponse, error) {
	out := new(SearchVideosResponse)
	err := c.cc.Invoke(ctx, "/media.VideoService/SearchVideos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VideoServiceServer is the server API for VideoService service.
type VideoServiceServer interface {
	ListVideos(context.Context, *Empty) (*ListVideosResponse, error)
	GetVideo(context.Context, *GetVideoRequest) (*Video, error)
	AddVideo(context.Context, *AddVideoRequest) (*AddVideoResponse, error)
	SearchVideos(context.Context, *SearchVideosRequest) (*SearchVideosResponse, error)
}

// UnimplementedVideoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVideoServiceServer struct {
}

func (*UnimplementedVideoServiceServer) ListVideos(ctx context.Context, req *Empty) (*ListVideosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVideos not implemented")
}
func (*UnimplementedVideoServiceServer) GetVideo(ctx context.Context, req *GetVideoRequest) (*Video, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideo not implemented")
}
func (*UnimplementedVideoServiceServer) AddVideo(ctx context.Context, req *AddVideoRequest) (*AddVideoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddVideo not implemented")
}
func (*UnimplementedVideoServiceServer) SearchVideos(ctx context.Context, req *SearchVideosRequest) (*SearchVideosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchVideos not implemented")
}

func RegisterVideoServiceServer(s *grpc.Server, srv VideoServiceServer) {
	s.RegisterService(&_VideoService_serviceDesc, srv)
}

func _VideoService_ListVideos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).ListVideos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.VideoService/ListVideos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).ListVideos(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_GetVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).GetVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.VideoService/GetVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).GetVideo(ctx, req.(*GetVideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_AddVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddVideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).AddVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.VideoService/AddVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).AddVideo(ctx, req.(*AddVideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_SearchVideos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchVideosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).SearchVideos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.VideoService/SearchVideos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).SearchVideos(ctx, req.(*SearchVideosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "media.VideoService",
	HandlerType: (*VideoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListVideos",
			Handler:    _VideoService_ListVideos_Handler,
		},
		{
			MethodName: "GetVideo",
			Handler:    _VideoService_GetVideo_Handler,
		},
		{
			MethodName: "AddVideo",
			Handler:    _VideoService_AddVideo_Handler,
		},
		{
			MethodName: "SearchVideos",
			Handler:    _VideoService_SearchVideos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app.proto",
}

// EmailServiceClient is the client API for EmailService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailServiceClient interface {
	SendConfirmation(ctx context.Context, in *SendConfirmationRequest, opts ...grpc.CallOption) (*Empty, error)
}

type emailServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmailServiceClient(cc *grpc.ClientConn) EmailServiceClient {
	return &emailServiceClient{cc}
}

func (c *emailServiceClient) SendConfirmation(ctx context.Context, in *SendConfirmationRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/media.EmailService/SendConfirmation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailServiceServer is the server API for EmailService service.
type EmailServiceServer interface {
	SendConfirmation(context.Context, *SendConfirmationRequest) (*Empty, error)
}

// UnimplementedEmailServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEmailServiceServer struct {
}

func (*UnimplementedEmailServiceServer) SendConfirmation(ctx context.Context, req *SendConfirmationRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendConfirmation not implemented")
}

func RegisterEmailServiceServer(s *grpc.Server, srv EmailServiceServer) {
	s.RegisterService(&_EmailService_serviceDesc, srv)
}

func _EmailService_SendConfirmation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendConfirmationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).SendConfirmation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media.EmailService/SendConfirmation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).SendConfirmation(ctx, req.(*SendConfirmationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "media.EmailService",
	HandlerType: (*EmailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendConfirmation",
			Handler:    _EmailService_SendConfirmation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app.proto",
}
